openapi: 3.0.2
info:
  title: aetuner
  version: '1.0'
  description: Analytics Engine Tuning Service
servers:
  - url: 'https://aetuner.mdr.global.alertlogic.com'
    x-alertlogic-global-endpoint: production
    description: production
  - url: 'https://aetuner.mdr.product.dev.alertlogic.com'
    x-alertlogic-global-endpoint: integration
    description: integration
paths:
  '/v1/{account_id}/analytics':
    get:
      summary: List Analytics for an account
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  logmsgs:
                    type: array
                    description: List of log-based analytics
                    items:
                      type: string
                  telemetry:
                    type: array
                    items:
                      type: string
                  observations:
                    type: array
                    items:
                      type: string
      operationId: list_analytics
      security:
        - aims_request_authorizer: []
      description: List analytics for an account
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AETunerSrvFunction.Arn}/invocations'
      parameters:
        - schema:
            type: string
            enum:
              - logsmsgs
              - observations
              - telemetry
          in: query
          name: datatype
          description: |-
            Data type used for analytics generation.
            If this parameter omitted, analytics for all data types are returned.
        - schema:
            type: string
            enum:
              - all
              - correlations
              - analytics
            default: all
          in: query
          name: output
          description: What to include in the response
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
        description: AIMS Account ID
  '/v1/{account_id}/analytics/{path}':
    get:
      summary: Get Analytic for a specific customer
      responses:
        '200':
          description: Analytic Information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticInfo'
      operationId: get_analytic
      security:
        - aims_request_authorizer: []
      description: Returns an analytic for a specific customer
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AETunerGetAnalyticFunction.Arn}/invocations'
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
        description: AIMS Account ID
      - schema:
          type: string
        name: path
        in: path
        required: true
        description: Analytic Fully Qualified Name
    post:
      summary: Update Analytics
      operationId: update_analytic
      responses:
        '201':
          description: Ok
      security:
        - aims_request_authorizer: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                visibility:
                  $ref: '#/components/schemas/IncidentVisibility'
                severity:
                  $ref: '#/components/schemas/IncidentSeverity'
                tuning:
                  type: object
                  description: Tuning Parameters. The list of tuning parameters depends on the analytic being tuned. Tunable options can be seen in `tuning_properties` property of the `analytic` object returned by get_analytic for the analytic.
                  additionalProperties: true
                reason:
                  type: string
                  description: Reason for the performing the update. This information is used for auditing purposes.
              required:
                - reason
        required: true
      description: Update an analytic
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AETunerUpdateAnalyticFunction.Arn}/invocations'
  '/v1/{account_id}/incident_types':
    get:
      summary: List Incident Types
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                description: List of incident types
                items:
                  type: string
      operationId: list_incident_types
      description: List all incident types for a specific customer
      security:
        - aims_request_authorizer: []
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AETunerListIncidentTypesFunction.Arn}/invocations'
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
  '/v1/{account_id}/incident_types/{path}':
    get:
      summary: Get Incident Type by Name
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentTypeInfo'
      operationId: get_incident_type
      description: "Return incident type for a specific customer by it's name"
      security:
        - aims_request_authorizer: []
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AETunerGetIncidentTypeFunction.Arn}/invocations'
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
        description: AIMS Account ID
      - schema:
          type: string
        name: path
        in: path
        required: true
        description: Incident Type Fully Qualified Name
    post:
      summary: Update Incident Type properties
      operationId: update_incident_type
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                severity:
                  $ref: '#/components/schemas/IncidentSeverity'
                visibility:
                  $ref: '#/components/schemas/IncidentVisibility'
                reason:
                  type: string
                  description: Reason for a change
              required:
                - reason
      security:
        - aims_request_authorizer: []
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AETunerUpdateIncidentTypeFunction.Arn}/invocations'
  '/v1/{account_id}/incident_handling/{path}':
    get:
      summary: Get Incident Type Handling Setting
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IncidentTypeHandlingInfo'
      operationId: get_incident_handling
      security:
        - aims_request_authorizer: []
      description: Return incident type handling setting
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AETunerGetIncidentHandlingFunction.Arn}/invocations'
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
        description: AIMS Account ID
      - schema:
          type: string
        name: path
        in: path
        required: true
        description: Incident Type Fully Qualified Name
    post:
      summary: Update Incident Type Handling Setting
      operationId: update_incident_handling
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  stored:
                    type: string
                    format: uuid
                    description: UUID of the stored record
      description: Set Incident Type handling setting
      security:
        - aims_request_authorizer: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                setting:
                  type: array
                  items:
                    $ref: '#/components/schemas/IncidentTypeHandlingSetting'
                reason:
                  type: string
                  description: Reason for a change
              required:
                - setting
                - reason
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AETunerUpdateIncidentHandlingFunction.Arn}/invocations'
    delete:
      summary: Delete Incident Handling Setting
      operationId: delete_incident_handling
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  stored:
                    type: string
                    format: uuid
                    description: UUID of the stored record
      description: Delete Incident Handling setting
      security:
        - aims_request_authorizer: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  description: Reason for a change
              required:
                - reason
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AETunerDeleteIncidentHandlingFunction.Arn}/invocations'
  '/v1/{account_id}/incident_handling':
    get:
      summary: Get a list of all incident handling settings for a customer
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                description: List of incident handling settings
                items:
                  $ref: '#/components/schemas/IncidentTypeHandlingInfo'
      operationId: list_incident_handlings
      security:
        - aims_request_authorizer: []
      description: Returns a list of all incident handling settings for a given customer
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AETunerListIncidentHandlingsFunction.Arn}/invocations'
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
        description: AIMS Account ID
  /healthcheck:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
      operationId: get_healthcheck
      description: Check health status of the service.
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AETunerGetHealthcheckFunction.Arn}/invocations'
components:
  securitySchemes:
    aims_request_authorizer:
      type: apiKey
      name: X-AIMS-Auth-Token
      in: header
      x-amazon-apigateway-authtype: custom
      x-amazon-apigateway-authorizer:
        authorizerUri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AIMSTokenAuthorizerFunction.Arn}/invocations'
        authorizerResultTtlInSeconds: 300
        identitySource: 'method.request.header.X-AIMS-Auth-Token, context.path'
        type: request
  schemas:
    AnalyticInfo:
      title: AnalyticInfo
      type: object
      description: Analytic Information
      properties:
        data_type:
          type: string
          enum:
            - logmsgs
            - observations
            - telemetry
          description: Data Type used to generate analytic outcome.
        display_name:
          type: string
        inherited:
          type: boolean
        name:
          type: string
        path:
          type: string
        severity:
          type: string
        visibility:
          type: string
        sql:
          type: string
        observation:
          $ref: '#/components/schemas/ObservationInfo'
    ObservationInfo:
      title: ObservationInfo
      type: object
      description: Observation Information
      properties:
        generate:
          type: string
        scope:
          type: string
        scope_type:
          type: string
        severity:
          type: string
          description: Tagset name for severity tags
        visibility:
          type: string
          description: Tagset name for visibility tags
        keys:
          type: object
        parents:
          type: string
    IncidentTypeInfo:
      title: IncidentTypeInfo
      type: object
      description: Incident Type Object
      properties:
        analytics:
          type: array
          description: List of Analytics that can generate this incident type
          items:
            type: string
        severity:
          $ref: '#/components/schemas/IncidentSeverity'
        visibility:
          $ref: '#/components/schemas/IncidentVisibility'
        path:
          type: string
          description: Fully qualifed name of an incident type
        incident_handling:
          $ref: '#/components/schemas/IncidentTypeHandlingInfo'
    IncidentSeverity:
      anyOf:
        - type: string
          title: IncidentSeverity
          description: Severity of an incident
          enum:
            - informational
            - low
            - medium
            - high
            - critical
        - type: "null"
    IncidentVisibility:
      anyOf:
        - type: string
          title: IncidentVisibility
          description: Visibility of an incident
          enum:
            - observation
            - incident
            - test
        - type: "null"
    IncidentTypeHandlingSetting:
      type: string
      title: IncidentTypeHandlingSetting
      description: |-
        * `auto_soc_close` - is only relevant to incident being shown to SOC or not, no other behaviour or values are affected.
            If True, will bypass the SOC and become available in the Customer Console.
        * `auto_escalate` - is only relevant to whether the customer receives an email notification or not, no other behaviour or values are affected.
            If an incident is escalated, and becomes soc-closed, a notification will be generated with the escalations flag set to True.
        * `auto_customer_close` - is only relevant to whether the customer sees the incident as “Closed” in the Customer Console or not, no other behaviour or values are affected.
            If True, the incident will only show in the Customer Console under the 'Closed' filter.
      enum:
        - auto_soc_close
        - auto_escalate
        - auto_customer_close
    IncidentTypeHandlingInfo:
      title: IncidentTypeHandlingInfo
      type: object
      description: Incident Type Handling information.
      properties:
        settings:
          type: array
          description: List of applicable handling settings
          items:
            $ref: '#/components/schemas/IncidentTypeHandlingSetting'
        path:
          type: string
          description: Handling preferences path.

