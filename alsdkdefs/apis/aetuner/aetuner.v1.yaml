openapi: 3.0.2
info:
  title: aetuner
  version: '1.0'
  description: Analytics Engine Tuning Service
  contact:
    email: support@alertlogic.com
servers:
  - url: 'https://aetuner.mdr.global.alertlogic.com'
    x-alertlogic-global-endpoint: production
    description: production
  - url: 'https://aetuner.mdr.product.dev.alertlogic.com'
    x-alertlogic-global-endpoint: integration
    description: integration
  - url: 'http://localhost:3000'
    x-alertlogic-global-endpoint: localhost3000
    description: localhost on port 3000
  - url: 'http://localhost:3001'
    x-alertlogic-global-endpoint: localhost3001
    description: localhost on port 3001
  - url: 'http://localhost:3002'
    x-alertlogic-global-endpoint: localhost3002
    description: localhost on port 3002
paths:
  '/v1/{account_id}/analytics':
    get:
      summary: List Analytics for an account
      tags:
        - aetuner
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  logmsgs:
                    type: array
                    description: List of log-based analytics
                    items:
                      type: string
                  telemetry:
                    type: array
                    items:
                      type: string
                  observations:
                    type: array
                    items:
                      type: string
      operationId: list_analytics
      security:
        - aims_request_authorizer: []
      description: List analytics for an account
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AETunerSrvFunction.Arn}/invocations'
      parameters:
        - schema:
            type: string
            enum:
              - logsmsgs
              - observations
              - telemetry
          in: query
          name: datatype
          description: |-
            Data type used for analytics generation.
            If this parameter omitted, analytics for all data types are returned.
        - schema:
            type: string
            enum:
              - all
              - correlations
              - analytics
            default: all
          in: query
          name: output
          description: What to include in the response
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
        description: AIMS Account ID
  '/v1/{account_id}/analytics2':
    get:
      summary: List Analytics for an account
      tags:
        - aetuner
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  logmsgs:
                    type: array
                    description: List of log-based analytics
                    items:
                      type: string
                  telemetry:
                    type: array
                    items:
                      type: string
                  observations:
                    type: array
                    items:
                      type: string
      operationId: list_analytics2
      security:
        - aims_request_authorizer: []
      description: List analytics for an account
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AETunerSrvFunction.Arn}/invocations'
      parameters:
        - schema:
            type: string
            enum:
              - logsmsgs
              - observations
              - telemetry
          in: query
          name: datatype
          description: |-
            Data type used for analytics generation.
            If this parameter omitted, analytics for all data types are returned.
        - schema:
            type: string
            enum:
              - all
              - correlations
              - analytics
            default: all
          in: query
          name: output
          description: What to include in the response
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
        description: AIMS Account ID
  '/v1/{account_id}/tagsets':
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
        description: AIMS Account ID
      - schema:
          type: string
        name: path
        in: query
        description: Name of a tagset
      - schema:
          type: string
        name: key
        in: query
        description: Key in the tagset
      - schema:
          type: boolean
        name: include_audit_events
        in: query
        description: Include audit events
      - schema:
          type: integer
        name: audit_events_limit
        in: query
        description: Limit of audit events to include
      - schema:
          type: boolean
        in: query
        name: explain
        description: Explain how tunings are calculated or updates
    get:
      summary: Get Value of a tagset
      responses:
        '200':
          description: Analytic Information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticInfo'
      operationId: get_tagset
      security:
        - aims_request_authorizer: []
      description: Returns an analytic for a specific customer
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AETunerGetTagsetFunction.Arn}/invocations'
      tags:
        - aetuner
    post:
      summary: Update Tagset
      operationId: update_tagset
      responses:
        '201':
          description: Ok
      security:
        - aims_request_authorizer: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                xtuning:        # TODO: remove
                  type: array
                  items:
                    $ref: '#/components/schemas/Tuning'
                  description: |-
                    --xtuning is DEPRECATED; please use --tuning instead
                tuning:
                  type: array
                  items:
                    $ref: '#/components/schemas/Tuning'
                  description: |-
                    A list of tunings for the analytic.

                    For visiblity, severity, threshold and handling when the default tagsets are not used it is possible
                    to expliclity provide a tagset path and key in the tagset for tuning. For blacklist and whitelist
                    tuning a tagset path and key must be provided. Examples explain how to use it.

                    NOTE: Spaces are not allowed between the items of a list.

                    Examples:
                      Severity
                       - {"type":"severity","value":"low"}
                       - {"type":"severity","path":"CustomSeverityMap","key":"windows","value":"low"}
                      Visibity to incident
                       - {"type":"visiblity","value":"incident"}
                       - {"type":"visiblity","path":"CustomVisibilityMap","key":"windows","value":"incident"}
                      Threshold
                       - threshold:100
                      Handling
                       - {"type":"handling","operation":"add","value":"auto_soc_close"}
                       - {"type":"handling","operation":"subtract","value":"auto_soc_close"}
                       - {"type":"handling","operation":"add","path":"CustomHandlingMap","key":"windows","value":"auto_soc_close"}
                      Whitelist
                       - {"type":"whitelist","operation":"add","path":"tuning/SomeWhitelist","key":"windows","value":["1.0.0.0"]}
                       - {"type":"whitelist","operation":"subtract","path":"tuning/SomeWhitelist","key":"windows","value":["1.0.0.0","2.0.0.0"]}
                      Blacklist
                       - {"type":"blacklist","operation":add","path":"tuning/SomeBlacklist","key":"windows","value":["1.0.0.0"]}
                       - {"type":"blacklist","operation":subtract,"path":"tuning/SomeBlacklist","key":"windows","value":["1.0.0.0","2.0.0.0"]}

                      To specify more than one tuning provide them in list like

                      '[{"type":"severity","value":"incident"},{"type":"visibility","value":"high"},{"type":"threshold","value":"100"}]'
                dry_run:
                  type: boolean
                  description: "DRY RUN only"
                reason:
                  type: string
                  description: Reason for the performing the update. This information is used for auditing purposes.
              required:
                - reason
        required: true
      description: Update a tagset
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AETunerUpdateTagsetFunction.Arn}/invocations'
      tags:
        - aetuner
  '/v1/{account_id}/analytics/{path}':
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
        description: AIMS Account ID
      - schema:
          type: string
        name: path
        in: path
        required: true
        description: Analytic Name
      - schema:
          type: string
        in: query
        name: severity_key
        description: Severity tagset tuning key. Used for getting tuning tagset value instead of default.
      - schema:
          type: string
        in: query
        name: visibility_key
        description: Visiblity tagset tuning key. Used for getting tuning tagset value instead of default.
      - schema:
          type: string
        in: query
        name: handling_key
        description: Handling tagset tuning key. Used for getting tuning tagset value instead of default.
      - schema:
          type: integer
        in: query
        name: audit_events_limit
        description: Limit the number of audit events to this number
      - schema:
          type: boolean
        in: query
        name: include_audit_events
        description: When set to true returns audit events for the tuning tagsets in the analytic
      - schema:
          type: string
        in: query
        name: tuning_tagset_path
      - schema:
          type: string
        in: query
        name: tuning_tagset_key
      - schema:
          type: string
        in: query
        name: tuning_tagset_value
      - schema:
          type: boolean
        in: query
        name: include_stacktrace
      - schema:
          type: boolean
        in: query
        name: enable_new
      - schema:
          type: object
        in: query
        name: sql_field_values
        description: A map of values for SQL fields, example {"bf_protocol":"windows"}
      - schema:
          type: string
        in: query
        name: key
        description: Tuning tagset key, defaults to the analytic name
      - schema:
          type: boolean
        in: query
        name: explain
        description: Explain how tunings are calculated or updates
    get:
      summary: Get Analytic for a specific customer
      responses:
        '200':
          description: Analytic Information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticInfo'
      operationId: get_analytic
      security:
        - aims_request_authorizer: []
      description: Returns an analytic for a specific customer. Requests without --enable_new=1 will be DEPRECATED
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AETunerGetAnalyticFunction.Arn}/invocations'
      tags:
        - aetuner
    post:
      summary: Update Analytics
      operationId: update_analytic
      responses:
        '201':
          description: Ok
      security:
        - aims_request_authorizer: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                disable_validation:
                  type: boolean
                  description: "Disable the check that tuning referes to a tagset referenced by the analytic. Use if there is a tuning tagset that is not detected to be refernced by an analytic"
                  default: false
                xtuning:        # TODO: remove
                  type: array
                  items:
                    $ref: '#/components/schemas/Tuning'
                  description: |-
                    --xtuning is DEPRECATED; please use --tuning instead
                tuning:
                  type: array
                  items:
                    $ref: '#/components/schemas/Tuning'
                  description: |-
                    A list of tunings for the analytic.

                    For visiblity, severity, threshold and handling when the default tagsets are not used it is possible
                    to expliclity provide a tagset path and key in the tagset for tuning. For blacklist and whitelist
                    tuning a tagset path and key must be provided. Examples explain how to use it.

                    NOTE: Spaces are not allowed between the items of a list.

                    Examples:
                      Severity
                       - {"type":"severity","value":"low"}
                       - {"type":"severity","path":"CustomSeverityMap","key":"windows","value":"low"}
                      Visibity to incident
                       - {"type":"visiblity","value":"incident"}
                       - {"type":"visiblity","path":"CustomVisibilityMap","key":"windows","value":"incident"}
                      Threshold
                       - threshold:100
                      Handling
                       - {"type":"handling","operation":"add","value":"auto_soc_close"}
                       - {"type":"handling","operation":"subtract","value":"auto_escalate"}
                       - {"type":"handling","operation":"add","path":"CustomHandlingMap","key":"windows","value":"auto_soc_close"}
                      Whitelist
                       - {"type":"whitelist","operation":"add","path":"tuning/SomeWhitelist","key":"windows","value":["1.0.0.0"]}
                       - {"type":"whitelist","operation":"subtract","path":"tuning/SomeWhitelist","key":"windows","value":["1.0.0.0","2.0.0.0"]}
                      Blacklist
                       - {"type":"blacklist","operation":add","path":"tuning/SomeBlacklist","key":"windows","value":["1.0.0.0"]}
                       - {"type":"blacklist","operation":subtract,"path":"tuning/SomeBlacklist","key":"windows","value":["1.0.0.0","2.0.0.0"]}

                      To specify more than one tuning provide them in list like

                      '[{"type":"severity","value":"incident"},{"type":"visibility","value":"high"},{"type":"threshold","value":"100"}]'
                dry_run:
                  type: boolean
                  description: "DRY RUN only"
                reason:
                  type: string
                  description: Reason for the performing the update. This information is used for auditing purposes.
              required:
                - reason
        required: true
      description: Update an analytic
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AETunerUpdateAnalyticFunction.Arn}/invocations'
      tags:
        - aetuner
  '/v1/{account_id}/analytics2/{path}':
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
        description: AIMS Account ID
      - schema:
          type: string
        name: path
        in: path
        required: true
        description: Analytic Name
      - schema:
          type: string
        in: query
        name: severity_key
        description: Severity tagset tuning key. Used for getting tuning tagset value instead of default.
      - schema:
          type: string
        in: query
        name: visibility_key
        description: Visiblity tagset tuning key. Used for getting tuning tagset value instead of default.
      - schema:
          type: string
        in: query
        name: handling_key
        description: Handling tagset tuning key. Used for getting tuning tagset value instead of default.
      - schema:
          type: integer
        in: query
        name: audit_events_limit
        description: Limit the number of audit events to this number
      - schema:
          type: boolean
        in: query
        name: include_audit_events
        description: When set to true returns audit events for the tuning tagsets in the analytic
      - schema:
          type: string
        in: query
        name: tuning_tagset_path
      - schema:
          type: string
        in: query
        name: tuning_tagset_key
      - schema:
          type: string
        in: query
        name: tuning_tagset_value
      - schema:
          type: boolean
        in: query
        name: include_stacktrace
      - schema:
          type: boolean
        in: query
        name: enable_new
      - schema:
          type: object
        in: query
        name: sql_field_values
        description: A map of values for SQL fields, example {"bf_protocol":"windows"}
      - schema:
          type: string
        in: query
        name: key
        description: Tuning tagset key, defaults to the analytic name
      - schema:
          type: boolean
        in: query
        name: explain
        description: Explain how tunings are calculated or updates
    get:
      summary: Get Analytic for a specific customer
      responses:
        '200':
          description: Analytic Information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticInfo'
      operationId: get_analytic2
      security:
        - aims_request_authorizer: []
      description: Returns an analytic for a specific customer. Requests without --enable_new=1 will be DEPRECATED
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AETunerGetAnalytic2Function.Arn}/invocations'
      tags:
        - aetuner
    post:
      summary: Update Analytics
      operationId: update_analytic2
      responses:
        '201':
          description: Ok
      security:
        - aims_request_authorizer: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                disable_validation:
                  type: boolean
                  description: "Disable the check that tuning referes to a tagset referenced by the analytic. Use if there is a tuning tagset that is not detected to be refernced by an analytic"
                  default: false
                tuning:
                  type: array
                  items:
                    $ref: '#/components/schemas/Tuning'
                  description: |-
                    A list of tunings for the analytic.

                    For visiblity, severity, threshold and handling when the default tagsets are not used it is possible
                    to expliclity provide a tagset path and key in the tagset for tuning. For blacklist and whitelist
                    tuning a tagset path and key must be provided. Examples explain how to use it.

                    NOTE: Spaces are not allowed between the items of a list.

                    Examples:
                      Severity
                       - {"type":"severity","value":"low"}
                       - {"type":"severity","path":"CustomSeverityMap","key":"windows","value":"low"}
                      Visibity to incident
                       - {"type":"visiblity","value":"incident"}
                       - {"type":"visiblity","path":"CustomVisibilityMap","key":"windows","value":"incident"}
                      Threshold
                       - threshold:100
                      Handling
                       - {"type":"handling","operation":"add","value":"auto_soc_close"}
                       - {"type":"handling","operation":"subtract","value":"auto_escalate"}
                       - {"type":"handling","operation":"add","path":"CustomHandlingMap","key":"windows","value":"auto_soc_close"}
                      Whitelist
                       - {"type":"whitelist","operation":"add","path":"tuning/SomeWhitelist","key":"windows","value":["1.0.0.0"]}
                       - {"type":"whitelist","operation":"subtract","path":"tuning/SomeWhitelist","key":"windows","value":["1.0.0.0","2.0.0.0"]}
                      Blacklist
                       - {"type":"blacklist","operation":add","path":"tuning/SomeBlacklist","key":"windows","value":["1.0.0.0"]}
                       - {"type":"blacklist","operation":subtract,"path":"tuning/SomeBlacklist","key":"windows","value":["1.0.0.0","2.0.0.0"]}

                      To specify more than one tuning provide them in list like

                      '[{"type":"severity","value":"incident"},{"type":"visibility","value":"high"},{"type":"threshold","value":"100"}]'
                dry_run:
                  type: boolean
                  description: "DRY RUN only"
                reason:
                  type: string
                  description: Reason for the performing the update. This information is used for auditing purposes.
              required:
                - reason
        required: true
      description: Update an analytic
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AETunerUpdateAnalyticFunction.Arn}/invocations'
      tags:
        - aetuner
  '/v1/{account_id}/reset/analytics/{path}':
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
        description: AIMS Account ID
      - schema:
          type: string
        name: path
        in: path
        required: true
        description: Analytic Fully Qualified Name
    post:
      summary: Reset Analytics setting to defaults
      operationId: reset_analytic
      responses:
        '201':
          description: Ok
      security:
        - aims_request_authorizer: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                visibility:
                  type: boolean
                severity:
                  type: boolean
                reason:
                  type: string
                  description: Reason for the performing the reset. This information is used for auditing purposes.
                tuning:
                  type: array
                  items:
                    type: string
                  example:
                    - threshold
                    - whitelist
                  description: List of tuning keys to reset
              required:
                - reason
        required: true
      description: Reset an analytic
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AETunerResetAnalyticFunction.Arn}/invocations'
      tags:
        - aetuner
  '/v1/{account_id}/reset/analytics2/{path}':
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
        description: AIMS Account ID
      - schema:
          type: string
        name: path
        in: path
        required: true
        description: Analytic Fully Qualified Name
    post:
      summary: Reset Analytics setting to defaults
      operationId: reset_analytic2
      responses:
        '201':
          description: Ok
      security:
        - aims_request_authorizer: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                visibility:
                  type: boolean
                severity:
                  type: boolean
                reason:
                  type: string
                  description: Reason for the performing the reset. This information is used for auditing purposes.
                tuning:
                  type: array
                  items:
                    type: string
                  example:
                    - threshold
                    - whitelist
                  description: List of tuning keys to reset
              required:
                - reason
        required: true
      description: Reset an analytic
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AETunerResetAnalytic2Function.Arn}/invocations'
      tags:
        - aetuner
  '/v1/{account_id}/reset/all_analytics/visibility':
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
        description: AIMS Account ID
    post:
      summary: Reset all Analytics visibility fields to default
      operationId: reset_all_analytics_visibility
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  handling_update:
                    $ref: '#/components/schemas/ResetAllAnalyticsResponseBody'
      security:
        - aims_request_authorizer: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetAllAnalyticsRequestBody'
        required: true
      description: Reset all Analytics visibility
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AETunerResetAllAnalyticsVisibilityFunction.Arn}/invocations'
      tags:
        - aetuner
  '/v1/{account_id}/reset/all_analytics/visibility2':
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
        description: AIMS Account ID
    post:
      summary: Reset all Analytics visibility fields to default
      operationId: reset_all_analytics_visibility2
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  handling_update:
                    $ref: '#/components/schemas/ResetAllAnalyticsResponseBody'
      security:
        - aims_request_authorizer: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetAllAnalyticsRequestBody'
        required: true
      description: Reset all Analytics visibility
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AETunerResetAllAnalyticsVisibility2Function.Arn}/invocations'
      tags:
        - aetuner
  '/v1/{account_id}/reset/all_analytics/severity':
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
        description: AIMS Account ID
    post:
      summary: Reset all Analytics severity to defaults
      operationId: reset_all_analytics_severity
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  severity_update:
                    $ref: '#/components/schemas/ResetAllAnalyticsResponseBody'
      security:
        - aims_request_authorizer: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetAllAnalyticsRequestBody'
        required: true
      description: Reset all Analytics severity
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AETunerResetAllAnalyticsSeverityFunction.Arn}/invocations'
      tags:
        - aetuner
  '/v1/{account_id}/reset/all_analytics/severity2':
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
        description: AIMS Account ID
    post:
      summary: Reset all Analytics severity to defaults
      operationId: reset_all_analytics_severity2
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  severity_update:
                    $ref: '#/components/schemas/ResetAllAnalyticsResponseBody'
      security:
        - aims_request_authorizer: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetAllAnalyticsRequestBody'
        required: true
      description: Reset all Analytics severity
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AETunerResetAllAnalyticsSeverity2Function.Arn}/invocations'
      tags:
        - aetuner
  '/v1/{account_id}/reset/all_analytics/handling':
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
        description: AIMS Account ID
    post:
      summary: Reset all Analytics handling to defaults
      operationId: reset_all_analytics_handling
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  handling_update:
                    $ref: '#/components/schemas/ResetAllAnalyticsResponseBody'
      security:
        - aims_request_authorizer: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetAllAnalyticsRequestBody'
        required: true
      description: Reset all Analytics handling
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AETunerResetAllAnalyticsHandlingFunction.Arn}/invocations'
      tags:
        - aetuner
  '/v1/{account_id}/reset/all_analytics/handling2':
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
        description: AIMS Account ID
    post:
      summary: Reset all Analytics handling to defaults
      operationId: reset_all_analytics_handling2
      responses:
        '201':
          description: Ok
          content:
            application/json:
              schema:
                type: object
                properties:
                  handling_update:
                    $ref: '#/components/schemas/ResetAllAnalyticsResponseBody'
      security:
        - aims_request_authorizer: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetAllAnalyticsRequestBody'
        required: true
      description: Reset all Analytics handling
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AETunerResetAllAnalyticsHandling2Function.Arn}/invocations'
      tags:
        - aetuner
  '/v1/tunings/report':
    get:
      summary: Tuning report commands
      tags: []
      responses:
        '200':
          description: OK
      operationId: tuning_report
      description: |-
        Returns a shell command that can be run to produce the desired
        report.

        Example:

        bash -c "$(alcli aetuner tuning_report --command get_tuning_for_tagset --path IncidentVisibilityMap)"
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AETunerTuningReportFunction.Arn}/invocations'
    parameters:
      - schema:
          type: string
          enum:
            - get_tuning_for_tagset
            - get_tuning_for_analytic
            - get_tuning_for_account_id
        name: command
        in: query
        required: true
        description: Command to run
      - schema:
          type: string
        name: cid
        in: query
        required: false
        description: Customer Account ID
      - schema:
          type: string
        name: path
        in: query
        required: false
        description: Path or Name of an analytic or tagset
      - schema:
          type: string
        name: observation_path
        in: query
        required: false
        description: Path or Name of the observation generated by the analytic, defaults to the name of the Analytic
      - schema:
          type: boolean
        name: return_values
        in: query
        required: false
        description: If true return the values of the tagsets, otherwise just return the keys
      - schema:
          type: string
        name: exclude
        in: query
        required: false
        description: Comma separated list of paths to exclude for get_tuning_for_analytic command
  '/version':
    get:
      summary: Get AEtuner version
      tags: []
      responses:
        '200':
          description: OK
      operationId: get_version
      description: Get the AEtuner version
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AETunerVersionFunction.Arn}/invocations'
  '/healthcheck':
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
      operationId: get_healthcheck
      description: Check health status of the service.
      x-amazon-apigateway-integration:
        uri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AETunerGetHealthcheckFunction.Arn}/invocations'
components:
  securitySchemes:
    aims_request_authorizer:
      type: apiKey
      name: X-AIMS-Auth-Token
      in: header
      x-amazon-apigateway-authtype: custom
      x-amazon-apigateway-authorizer:
        authorizerUri:
          'Fn::Sub': 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${AIMSTokenAuthorizerFunction.Arn}/invocations'
        authorizerResultTtlInSeconds: 300
        identitySource: 'method.request.header.X-AIMS-Auth-Token, context.path'
        type: request
  schemas:
    AnalyticInfo:
      title: AnalyticInfo
      type: object
      description: Analytic Information
      properties:
        data_type:
          type: string
          enum:
            - logmsgs
            - observation
            - telemetry
          description: Data Type used to generate analytic outcome.
        display_name:
          type: string
        inherited:
          type: boolean
        name:
          type: string
        path:
          type: string
        severity:
          type: string
        visibility:
          type: string
        sql:
          type: string
        observation:
          $ref: '#/components/schemas/ObservationInfo'
    ObservationInfo:
      title: ObservationInfo
      type: object
      description: Observation Information
      properties:
        generate:
          type: string
        scope:
          type: string
        scope_type:
          type: string
        severity:
          type: string
          description: Tagset name for severity tags
        visibility:
          type: string
          description: Tagset name for visibility tags
        keys:
          type: object
        parents:
          type: string
    Tuning:
      title: Tuning
      type: object
      description: Tuning specification
      additionalProperties: false
      properties:
        type:
          type: string
          description: Type of the tuning
          enum:
            - severity
            - visibility
            - threshold
            - handling
            - whitelist
            - blacklist
        operation:
          type: string
          description: Operation to perform
          enum:
            - add
            - subtract
            - write
            - delete
        value:
          description: Value string or a list of string
          anyOf:
            - description: String value
              type: string
            - description: Number value
              type: integer
            - description: List value
              type: array
        path:
          type: string
          description: Explicit tuning tagset path
        key:
          type: string
          description: Explicit tuning tagset key
    ResetAllAnalyticsRequestBody:
      title: ResetAllAnalyticsRequestBody
      type: object
      properties:
        reason:
          type: string
          description: Reason for the performing the reset. This information is used for auditing purposes.
        dry_run:
          type: boolean
          description: "DRY RUN only"
      required:
        - reason
    ResetAllAnalyticsResponseBody:
      title: ResetAllAnalyticsResponseBody
      oneOf:
        - type: array
          description: List of tagsets delete results
          items:
            type: object
            properties:
              tagset_path:
                type: string
              operation:
                type: string
              status:
                type: object
                properties:
                  stored:
                    type: string
                    format: uuid
        - type: object
          properties:
            dry_run:
              type: boolean
            tagsets_to_delete:
              type: array
              items:
                type: string
tags:
  - name: aetuner
    description: aetuner operations
