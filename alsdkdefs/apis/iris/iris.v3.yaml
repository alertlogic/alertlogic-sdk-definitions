openapi: 3.0.2
info:
  title: IRIS service
  version: '3.0'
  description: Incident service
  contact:
    email: support@alertlogic.com
    name: Alert Logic support
servers:
  - url: 'https://api.cloudinsight.alertlogic.com'
    description: production
    x-alertlogic-session-endpoint: true
  - url: 'https://api.product.dev.alertlogic.com'
    description: integration
    x-alertlogic-session-endpoint: true
paths:
  '/iris/v3/{account_id}/{incident_id}':
    get:
      summary: Get incident
      tags:
        - Incident operations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Incident'
              examples:
                Get Incident response example:
                  value:
                    accountId: number
                    all_assets:
                      - object
                    asset_deployment_type: string
                    asset_host_name: string
                    asset_native_account_id: string
                    assets:
                      __asset: object
                      __contentType: string
                      __messageId: string
                      __normalizedTime: string
                      __relatedOrAssociated: string
                      __source: string
                      __uuid: string
                      al__deployment: string
                      al__subnet: string
                      al__vpc: string
                    attacker:
                      ip: string
                    attacker_lset:
                      - object
                    createTime: number
                    createtimeStr: string
                    customer: string
                    customer_status:
                      status: string
                      status_change_time: string
                    defaultThreatRating: string
                    has_assets: boolean
                    humanFriendlyId: string
                    incident:
                      attackClassId: number
                      attackClassId_str: string
                      subType: string
                      summary: string
                      threatRating: string
                      type: string
                    incidentId: string
                    incident_attack_class: string
                    incident_escalated: string
                    incident_sub_type: string
                    iris_notifications: boolean
                    snooze_status:
                      period_ms: number
                      reason_code: string
                      snoozed: boolean
                    sources:
                      - string
                    updateTime: number
                    updatetime_str: string
                    victim:
                      ip: string
                    victim_lset:
                      - object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: account_id incident_id combination not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Http 404 example:
                  value:
                    error: "Not found"
                    code: 404
      operationId: get_incident
      description: Get incident
      security:
        - X-AIMS-Auth-Token: []
      x-code-samples:
        - lang: Request Sample
          source: |
            curl -X GET "https://api.cloudinsight.alerlogic.com/iris/v3/12345678/e12345678"
      parameters:
        - schema:
            type: string
          name: account_id
          in: path
          required: true
          description: AIMS Account ID
        - schema:
            $ref: '#/components/schemas/IncidentId'
          name: incident_id
          in: path
          required: true
        - schema:
            type: string
          name: return_value
          in: query
          description: Comma delimited list of dot-notation string names of desired properties in the result set. Use if you want a subset of attributes from the incident
  '/iris/v3/{account_id}/friendly/{friendly_id}':
    get:
      summary: Get incident ID by friendly ID
      tags:
        - Incident operations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FriendlyResponse'
              examples:
                Friendly response example:
                  value:
                    - accountId: number
                      humanFriendlyId: string
                      incidentId: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: account_id friendly_id combination not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Http 404 example:
                  value:
                    error: "Id not found"
                    code: 404
      operationId: get_incident_id_by_friendly
      description: Get incident ID by friendly ID
      security:
        - X-AIMS-Auth-Token: []
      x-code-samples:
        - lang: Request Sample
          source: |
            curl -X GET "https://api.cloudinsight.alerlogic.com/iris/v3/12345678/friendly/k9abcd"
      parameters:
        - schema:
            type: string
          name: account_id
          in: path
          required: true
          description: AIMS Account ID
        - schema:
            type: string
          name: friendly_id
          in: path
          required: true
          description: Human friendly ID. A length 6 alpha-numeric ID shorter than IncidentID
  '/iris/v3/{account_id}/{incident_id}/elaborations/associated':
    get:
      summary: Get associated logs/events for incident
      tags:
        - Incident operations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssociatedElaborations'
              examples:
                Get associated logs/events response example:
                  value:
                    filter:
                      eq:
                        property: string
                        value: string
                    metadata:
                      total_count: number
                      limit: number
                      offset: number
                      links:
                        self: string
                        first: string
                        prev: string
                        next: string
                        last: string
                    returnVals:
                      - __appliance_name: string
                        __content_type: string
                        __datacenter: string
                        __hostUUID: string
                        __host_id: string
                        __host_name: string
                        __irisType: string
                        __messageId: string
                        __normalizedTime: string
                        __relatedOrAssociated: string
                        __source: string
                        __sourceName: string
                        __sourceType: string
                        __source_host_ip: string
                        __uuid: string
                        facility: string
                        header: string
                        host_name: string
                        id: object
                        ingest_id: string
                        ingest_ts: number
                        message: string
                        metadata: object
                        priority: number
                        source_id: string
                        time_recv: number
                    stats:
                      matchCounts: array
                      numItemsInDataSource: number
                      numberOfMatchingElaborations: number
                      queryExecutionTime:
                        Aggregation: string
                        Filter: string
                        Hydration: string
                        Match Counts: string
                        Results: string
                        TimeSlice: string
                        Total Query: string
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: account_id incident_id combination not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Http 404 example:
                  value:
                    error: "Not found"
                    code: 404
      operationId: get_associated_elaborations
      description: Get associated logs/events for incident
      security:
        - X-AIMS-Auth-Token: []
      x-code-samples:
        - lang: Request Sample
          source: |
            curl -X GET "https://api.cloudinsight.alerlogic.com/iris/v3/12345678/e12345678/elaborations/associated"
      parameters:
        - schema:
            type: string
          name: account_id
          in: path
          required: true
          description: AIMS Account ID
        - schema:
            $ref: '#/components/schemas/IncidentId'
          name: incident_id
          in: path
          required: true
        - schema:
            type: string
          name: returnSource
          in: query
          description: 'To filter by source type. Allowed values - log, event'
        - schema:
            type: string
          name: return_value
          in: query
          description: "Comma delimited list of 'dot-notation' string names of desired properties in the result set. Use if you want only a subset of attributes from results"
        - schema:
            type: number
          name: limit
          in: query
          description: "Maximum number of items in the result set"
        - schema:
            type: number
          name: offset
          in: query
          description: "The (zero-based) offset of the first item in the result set to return"
  '/iris/v3/{account_id}/incidents_by_time':
    get:
      summary: Get incidents in a timespan for account
      tags:
        - Incident operations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IncidentList'
                  - $ref: '#/components/schemas/PaginatedIncidentList'
              examples:
                Incidents by time response example:
                  value:
                    - accountId: number
                      all_assets:
                        - object
                      asset_deployment_type: string
                      asset_host_name: string
                      asset_native_account_id: string
                      assets:
                        __asset: object
                        __contentType: string
                        __messageId: string
                        __normalizedTime: string
                        __relatedOrAssociated: string
                        __source: string
                        __uuid: string
                        al__deployment: string
                        al__subnet: string
                        al__vpc: string
                      attacker:
                        ip: string
                      attacker_lset:
                        - object
                      createTime: number
                      createtimeStr: string
                      customer: string
                      customer_status:
                        status: string
                        status_change_time: string
                      defaultThreatRating: string
                      has_assets: boolean
                      humanFriendlyId: string
                      incident:
                        attackClassId: number
                        attackClassId_str: string
                        subType: string
                        summary: string
                        threatRating: string
                        type: string
                      incidentId: string
                      incident_attack_class: string
                      incident_escalated: string
                      incident_sub_type: string
                      iris_notifications: boolean
                      snooze_status:
                        period_ms: number
                        reason_code: string
                        snoozed: boolean
                      sources:
                        - string
                      updateTime: number
                      updatetime_str: string
                      victim:
                        ip: string
                      victim_lset:
                        - object
                Incidents by time response example (with pagination):
                  value:
                    iris_items:
                      - accountId: <number>
                        account_id: <string>
                        aggregations: <array>
                        apex: <boolean>
                        assets: <object>
                        associatedLogCount: <number>
                        authority: <string>
                        auto_customer_close: <boolean>
                        auto_escalate: <boolean>
                        auto_soc_close: <boolean>
                        aws_region: <string>
                        correlation_id: <string>
                        correlation_name: <string>
                        createTime: <number>
                        createtime_str: <string>
                        customer: <string>
                        customer_status:
                          status: <string>
                          status_change_time: <string>
                        customer_status_status: <string>
                        dedup_hint: <string>
                        desc: <string>
                        detection_source: <string>
                        elaborations:
                          - <object>
                        end_ts: <number>
                        has_assets: <boolean>
                        humanFriendlyId: <string>
                        incident:
                          attackClassId: <number>
                          attackClassId_str: <string>
                          description: <string>
                          evolution: <object>
                          recommendations: <string>
                          summary: <string>
                          threatRating: <string>
                        incidentId: <string>
                        incident_attack_class: <string>
                        incident_class: <string>
                        incident_escalated: <string>
                        incident_threat_rating: <string>
                        incident_type: <string>
                        observation_create_time: <number>
                        parents:
                          facts_count: <number>
                          observations_count: <number>
                        path: <string>
                        recommendations: <string>
                        scope_type: <string>
                        snooze_status:
                          period_ms: <number>
                          reason_code: <string>
                          snoozed: <boolean>
                        snooze_status_snoozed: <boolean>
                        sources:
                          - <string>
                        stack_region: <string>
                        start_ts: <number>
                        summary: <string>
                        updateTime: <number>
                        updatetime_str: <string>
                        visibility: <string>
                    metadata:
                      limit: 10
                      links:
                        first: /iris/v3/1234/incidents_by_time?start_time=1577836800&end_time=1577923200&pagination=true&limit=10&offset=0
                        next: null
                        prev: /iris/v3/1234/incidents_by_time?start_time=1577836800&end_time=1577923200&pagination=true&limit=10&offset=0
                        self: /iris/v3/1234/incidents_by_time?start_time=1577836800&end_time=1577923200&pagination=true&limit=10&offset=5
                      offset: 5
                      total_count: 6
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Missing start/end time:
                  value:
                    code: 400
                    error: start_time and end_time query strings must be provided
                Invalid arguments:
                  value:
                    code: 400
                    error: Invalid arguments
                Invalid limit parameter:
                  $ref: '#/components/examples/InvalidLimitParam'
                Invalid offset parameter:
                  $ref: '#/components/examples/InvalidOffsetParam'
        '401':
          description: Not authorized
        '403':
          description: Forbidden
      operationId: incidents_by_time
      description: Get incidents in a timespan for an account
      security:
        - X-AIMS-Auth-Token: []
      x-code-samples:
        - lang: Request Sample
          source: |
            curl -X GET "https://api.cloudinsight.alerlogic.com/iris/v3/12345678/incidents_by_time?start_time=1577836800&end_time=1577923200"
      parameters:
        - schema:
            type: string
          name: account_id
          in: path
          required: true
          description: AIMS Account ID
        - schema:
            type: string
          name: start_time
          in: query
          required: true
          description: 'Time to begin span, either epoch timestamp or an ISO string'
        - schema:
            type: string
          name: end_time
          in: query
          required: true
          description: 'Time to end span, either epoch timestamp or an ISO string'
        - schema:
            type: string
          name: return_value
          in: query
          description: Comma delimited list of dot-notation string names of desired properties in the result set. Use if you only want a subset of attributes from each incident
        - $ref: '#/components/parameters/PaginationParam'
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/OffsetParam'
  '/iris/v3/{account_id}/partner_incidents':
    get:
      summary: Get incidents for an account and all accounts managed by it in a timespan.
      tags: 
        - Partner API
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IncidentList'
                  - $ref: '#/components/schemas/PaginatedIncidentList'
              examples:
                Partner incidents response example:
                  value:
                    - accountId: number
                      all_assets:
                        - object
                      asset_deployment_type: string
                      asset_host_name: string
                      asset_native_account_id: string
                      assets:
                        __asset: object
                        __contentType: string
                        __messageId: string
                        __normalizedTime: string
                        __relatedOrAssociated: string
                        __source: string
                        __uuid: string
                        al__deployment: string
                        al__subnet: string
                        al__vpc: string
                      attacker:
                        ip: string
                      attacker_lset:
                        - object
                      createTime: number
                      createtimeStr: string
                      customer: string
                      customer_status:
                        status: string
                        status_change_time: string
                      defaultThreatRating: string
                      has_assets: boolean
                      humanFriendlyId: string
                      incident:
                        attackClassId: number
                        attackClassId_str: string
                        subType: string
                        summary: string
                        threatRating: string
                        type: string
                      incidentId: string
                      incident_attack_class: string
                      incident_escalated: string
                      incident_sub_type: string
                      iris_notifications: boolean
                      snooze_status:
                        period_ms: number
                        reason_code: string
                        snoozed: boolean
                      sources:
                        - string
                      updateTime: number
                      updatetime_str: string
                      victim:
                        ip: string
                      victim_lset:
                        - object
                Partner incidents response example (with pagination):
                  value:
                    iris_items:
                      - accountId: <number>
                        account_deployments:
                          - <string>
                        affected_hosts: <array>
                        assets:
                          al__deployment: <string>
                          al__region: <string>
                          al__role: <string>
                          al__subnet: <string>
                          al__vpc: <string>
                        associatedLogCount: <number>
                        correlation_id: <string>
                        correlation_name: <string>
                        createTime: <number>
                        createtime_str: <string>
                        customer: <string>
                        customer_status:
                          status: <string>
                          status_change_time: <string>
                        has_assets: <boolean>
                        humanFriendlyId: <string>
                        incident:
                          attackClassId: <number>
                          attackClassId_str: <string>
                          description: <string>
                          escalated: <boolean>
                          evolution: <object>
                          summary: <string>
                          threatRating: <string>
                        incidentId: <string>
                        snooze_status:
                          period_ms: <number>
                          reason_code: <string>
                          snoozed: <boolean>
                        source_keyword: <string>
                        sources:
                          - <string>
                        updateTime: <number>
                        updatetime_str: <string>
                        victim: <object>
                    metadata:
                      limit: 10
                      links:
                        first: /iris/v3/1234/partner_incidents?start_time=1577836800&end_time=1577923200&pagination=true&limit=10&offset=0
                        next: null
                        prev: /iris/v3/1234/partner_incidents?start_time=1577836800&end_time=1577923200&pagination=true&limit=10&offset=0
                        self: /iris/v3/1234/partner_incidents?start_time=1577836800&end_time=1577923200&pagination=true&limit=10&offset=5
                      offset: 5
                      total_count: 6
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Missing start/end time:
                  value:
                    code: 400
                    error: start_time and end_time query strings must be provided
                Invalid timestamp:
                  value:
                    code: 400
                    error: time_stamp query string must be updateTime or createTime
                Invalid arguments:
                  value:
                    code: 400
                    error: Invalid arguments
                Invalid limit parameter:
                  $ref: '#/components/examples/InvalidLimitParam'
                Invalid offset parameter:
                  $ref: '#/components/examples/InvalidOffsetParam'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      operationId: partner_account_incidents
      description: Get incidents over a timerange for account and all accounts managed by it.
      security:
        - X-AIMS-Auth-Token: []
      x-code-samples:
        - lang: Request Sample
          source: |
            curl -X GET "https://api.cloudinsight.alerlogic.com/iris/v3/12345678/partner_incidents?start_time=1577836800&end_time=1577923200"
      parameters:
        - schema:
            type: string
          name: account_id
          in: path
          required: true
          description: AIMS Account ID
        - schema:
            type: string
          name: start_time
          in: query
          required: true
          description: 'Time to begin span, either epoch timestamp or an ISO string'
        - schema:
            type: string
          name: end_time
          in: query
          required: true
          description: 'Time to end span, either epoch timestamp or an ISO string'
        - schema:
            type: string
          name: return_value
          in: query
          description: Comma delimited list of dot-notation string names of desired properties in the result set. Use if you only want a subset of attributes from each incident
        - schema:
            type: string
          name: time_stamp
          in: query
          description: The timestamp to search for incidents with, either 'createTime' or 'updateTime'
        - schema:
            type: string
          name: aid
          in: query
          description: A comma delimited list of accounts managed by account_id to return. E.g aid=10,11,12,13
        - $ref: '#/components/parameters/PaginationParam'
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/OffsetParam'
  /iris/v3/partner_incidents:
    get:
      summary: Get incidents for caller account and all accounts managed by it in a timespan.
      tags: 
        - Partner API
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/IncidentList'
                  - $ref: '#/components/schemas/PaginatedIncidentList'
              examples:
                Partner incidents response example:
                  value:
                    - accountId: number
                      all_assets:
                        - object
                      asset_deployment_type: string
                      asset_host_name: string
                      asset_native_account_id: string
                      assets:
                        __asset: object
                        __contentType: string
                        __messageId: string
                        __normalizedTime: string
                        __relatedOrAssociated: string
                        __source: string
                        __uuid: string
                        al__deployment: string
                        al__subnet: string
                        al__vpc: string
                      attacker:
                        ip: string
                      attacker_lset:
                        - object
                      createTime: number
                      createtimeStr: string
                      customer: string
                      customer_status:
                        status: string
                        status_change_time: string
                      defaultThreatRating: string
                      has_assets: boolean
                      humanFriendlyId: string
                      incident:
                        attackClassId: number
                        attackClassId_str: string
                        subType: string
                        summary: string
                        threatRating: string
                        type: string
                      incidentId: string
                      incident_attack_class: string
                      incident_escalated: string
                      incident_sub_type: string
                      iris_notifications: boolean
                      snooze_status:
                        period_ms: number
                        reason_code: string
                        snoozed: boolean
                      sources:
                        - string
                      updateTime: number
                      updatetime_str: string
                      victim:
                        ip: string
                      victim_lset:
                        - object
                Partner incidents response example (with pagination):
                  value:
                    iris_items:
                      - accountId: <number>
                        account_deployments:
                          - <string>
                        affected_hosts: <array>
                        assets:
                          al__deployment: <string>
                          al__region: <string>
                          al__role: <string>
                          al__subnet: <string>
                          al__vpc: <string>
                        associatedLogCount: <number>
                        correlation_id: <string>
                        correlation_name: <string>
                        createTime: <number>
                        createtime_str: <string>
                        customer: <string>
                        customer_status:
                          status: <string>
                          status_change_time: <string>
                        has_assets: <boolean>
                        humanFriendlyId: <string>
                        incident:
                          attackClassId: <number>
                          attackClassId_str: <string>
                          description: <string>
                          escalated: <boolean>
                          evolution: <object>
                          summary: <string>
                          threatRating: <string>
                        incidentId: <string>
                        snooze_status:
                          period_ms: <number>
                          reason_code: <string>
                          snoozed: <boolean>
                        source_keyword: <string>
                        sources:
                          - <string>
                        updateTime: <number>
                        updatetime_str: <string>
                        victim: <object>
                    metadata:
                      limit: 10
                      links:
                        first: /iris/v3/partner_incidents?start_time=1577836800&end_time=1577923200&pagination=true&limit=10&offset=0
                        next: null
                        prev: /iris/v3/partner_incidents?start_time=1577836800&end_time=1577923200&pagination=true&limit=10&offset=0
                        self: /iris/v3/partner_incidents?start_time=1577836800&end_time=1577923200&pagination=true&limit=10&offset=5
                      offset: 5
                      total_count: 6
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Missing start/end time:
                  value:
                    code: 400
                    error: start_time and end_time query strings must be provided
                Invalid timestamp:
                  value:
                    code: 400
                    error: time_stamp query string must be updateTime or createTime
                Invalid arguments:
                  value:
                    code: 400
                    error: Invalid arguments
                Invalid limit parameter:
                  $ref: '#/components/examples/InvalidLimitParam'
                Invalid offset parameter:
                  $ref: '#/components/examples/InvalidOffsetParam'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
      operationId: partner_incidents
      description: Get incidents over a timerange for caller account and all accounts managed by it.
      security:
        - X-AIMS-Auth-Token: []
      x-code-samples:
        - lang: Request Sample
          source: |
            curl -X GET "https://api.cloudinsight.alerlogic.com/iris/v3/partner_incidents?start_time=1577836800&end_time=1577923200"
      parameters:
        - schema:
            type: string
          name: start_time
          in: query
          required: true
          description: 'Time to begin span, either epoch timestamp or an ISO string'
        - schema:
            type: string
          name: end_time
          in: query
          required: true
          description: 'Time to end span, either epoch timestamp or an ISO string'
        - schema:
            type: string
          name: return_value
          in: query
          description: Comma delimited list of dot-notation string names of desired properties in the result set. Use if you only want a subset of attributes from each incident
        - schema:
            type: string
          name: time_stamp
          in: query
          description: The timestamp to search for incidents with, either 'createTime' or 'updateTime'
        - schema:
            type: string
          name: aid
          in: query
          description: A comma delimited list of accounts managed by account_id to return. E.g aid=10,11,12,13
        - $ref: '#/components/parameters/PaginationParam'
        - $ref: '#/components/parameters/LimitParam'
        - $ref: '#/components/parameters/OffsetParam'
  '/iris/v3/{account_id}/{incident_id}/complete':
    post:
      summary: Complete / close an incident
      tags:
        - UI operations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteIncident'
              examples:
                Complete incident response example:
                  value:
                    new: 
                      notes: This incident is closed because of x
                      reason_code: further_action
                      status: completed
                      status_change_time: 2020-05-22T11:09:56.855569+00:00
                    old:
                      status: open
                      status_change_time: 2020-05-22T07:54:33.555371+00:00
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Invalid account/incident id:
                  value:
                    error: Invalid AccountId or IncidentId supplied
                    code: 400
                Invalid body:
                  value:
                    error: Request body should be valid JSON
                    code: 400
                Invalid arguments:
                  value:
                    error: Invalid arguments
                    code: 400
                Incident already closed:
                  value:
                    error: Incident 12341ab29e36-394e-11e9-a004-720004270420 status is currently the same completed
                    code: 400
        '401':
          description: Not authorized
        '404':
          description: account_id incident_id combination not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Http 404 example:
                  value:
                    error: "Not found"
                    code: 404
        '500':
          description: Internal Server Error 
      operationId: complete_incident
      description: Complete/Close an incident
      security:
        - X-AIMS-Auth-Token: []
      x-code-samples:
        - lang: Request Sample
          source: |
            curl -H "x-aims-auth-token: ${TOKEN}" -X POST https://api.cloudinsight.alertlogic.com/iris/v3/12341ab29e36-394e-11e9-a004-720004270420/complete -d '{"reason_code": "further_action", "notes": "This incident is closed because of y"}'
      requestBody:
        description:  'The value in notes will be displayed in the customer console as the reason for incident closure/completion. The value in reason code is used to classify the reason for closure.'
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                notes:
                  type: string
                  description: Notes about completion
                reason_code:
                  type: string
                  description: Reason for completion
                  enum:
                    - further_action
                    - acceptable_risk
                    - compensating_control
                    - threat_not_valid
                    - not_concluded
                    - other
              required:
                - notes
                - reason_code
            examples:
              Complete incident body:
                value:
                  notes: This incident is because of X
                  reason_code: compensating_control
      parameters:
        - schema:
            type: string
          name: account_id
          in: path
          required: true
          description: AIMS Account ID
        - schema:
            $ref: '#/components/schemas/IncidentId'
          name: incident_id
          in: path
          required: true
  '/iris/v3/{account_id}/{incident_id}/feedback':
    post:
      summary: Add feedback to an incident
      tags:
        - UI operations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerFeedback'
              examples:
                Add feedback response example:
                  value:
                    feedback: My feedback
                    feedback_datetime: '2020-05-25T19:21:04.854130+00:00'
                    feedback_reason: further_action
                    feedback_uid: FFFFFFFF-FFFF-FFFF-FFFF-FFFFFFFFFFFF
                    feedback_user: 'User Name <user@email.org>'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Invalid account/incident id:
                  value:
                    error: Invalid AccountId or IncidentId supplied
                    code: 400
                Invalid body:
                  value:
                    error: Request body should be valid JSON
                    code: 400
                Invalid arguments:
                  value:
                    error: Invalid arguments
                    code: 400
        '401':
          description: Unauthorized
        '404':
          description: account_id incident_id combination not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Http 404 example:
                  value:
                    error: "Not found"
                    code: 404
        '500':
          description: Internal Server Error
      operationId: add_feedback
      description: Add feedback to incident
      security:
        - X-AIMS-Auth-Token: []
      x-code-samples:
        - lang: Request Sample
          source: |
            curl -H "x-aims-auth-token: ${TOKEN}" -X POST https://api.cloudinsight.alertlogic.com/iris/v3/1234/1ab29e36-394e-11e9-a004-720004270420/feedback -d '{"customer_feedback": "My feedback", "customer_feedback_reason": "further_action"}'
      requestBody:
        description: 'The value in customer_feedback will be added to the incident and visible in the customer console, the value in customer_feedback_reason is used to classify the type of feedback.'
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                customer_feedback:
                  type: string
                  description: Feedback to add to incident
                customer_feedback_reason:
                  type: string
                  description: Reason for feedback
                  enum:
                    - further_action
                    - acceptable_risk
                    - compensating_control
                    - threat_not_valid
                    - not_concluded
                    - other
              required:
                - customer_feedback
                - customer_feedback_reason
            examples:
              Add customer feedback body:
                value:
                  customer_feedback: My feedback
                  customer_feedback_reason: futher_action
      parameters:
        - schema:
            type: string
          name: account_id
          in: path
          required: true
          description: AIMS Account ID
        - schema:
            $ref: '#/components/schemas/IncidentId'
          name: incident_id
          in: path
          required: true
  '/iris/v3/{account_id}/{incident_id}/reopen':
    post:
      summary: reopen a closed incident
      tags:
        - UI operations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReopenIncident'
              examples:
                Complete incident response example:
                  value:
                    new: 
                      notes: reopening because of y
                      reason_code: other
                      status: open
                      status_change_time: 2020-05-22T11:09:56.855569+00:00
                    old:
                      status: completed
                      status_change_time: 2020-05-22T07:54:33.555371+00:00
                      reason_code: further_action
                      notes: closed because of x
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Invalid account/incident id:
                  value:
                    error: Invalid AccountId or IncidentId supplied
                    code: 400
                Invalid body:
                  value:
                    error: Request body should be valid JSON
                    code: 400
                Invalid arguments:
                  value:
                    error: Invalid arguments
                    code: 400
                Incident already open:
                  value:
                    error: Incident 12341ab29e36-394e-11e9-a004-720004270420 status is currently the same open
                    code: 400
        '401':
          description: Not authorized
        '404':
          description: account_id incident_id combination not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Http 404 example:
                  value:
                    error: "Not found"
                    code: 404
        '500':
          description: Internal Server Error
      operationId: reopen_incident
      description: reopen an incident
      security:
        - X-AIMS-Auth-Token: []
      x-code-samples:
        - lang: Request Sample
          source: |
            curl -H "x-aims-auth-token: ${TOKEN}" -X POST https://api.cloudinsight.alertlogic.com/iris/v3/12341ab29e36-394e-11e9-a004-720004270420/reopen -d '{"notes": "reopening because of y"}'
      requestBody:
        description:  'The value in notes will be displayed in the customer console as the reason for opening'
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                notes:
                  type: string
                  description: Notes about completion
              required:
                - notes
            examples:
              Complete incident body:
                value:
                  notes: Reopening because of y
      parameters:
        - schema:
            type: string
          name: account_id
          in: path
          required: true
          description: AIMS Account ID
        - schema:
            $ref: '#/components/schemas/IncidentId'
          name: incident_id
          in: path
          required: true
  /iris/v3/incident_filters:
    get:
      summary: Get incident filters
      tags:
        - Console
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: Incident Filters
                type: object
                properties:
                  class:
                    type: array
                    items:
                      type: string
                  detection_source:
                    type: array
                    items:
                      type: string
                  escalated:
                    type: array
                    items:
                      type: boolean
                  threat_level:
                    type: array
                    items:
                      type: string
                required:
                  - class
                  - detection_source
                  - escalated
                  - threat_level
              examples:
                200 OK:
                  value:
                    class:
                      - web-log-analytics
                      - suspicious-activity
                      - brute-force
                      - application-attack
                      - recon
                      - trojan-activity
                      - policy-violation
                      - info-leak
                      - test
                      - base
                      - worm-activity
                      - defensive-action
                      - containment-action
                      - denial-of-service
                      - log-policy
                      - pending
                      - misconfiguration
                      - log-review
                      - 'authentication:activity'
                      - 'admin:activity'
                    detection_source:
                      - Network IDS
                      - GuardDuty
                      - Log Mgmt
                      - Web App IDS
                      - Web Log Analytics
                      - Log Review
                      - Correlated Log
                      - Firewall
                      - Manual
                      - N/A
                    escalated:
                      - true
                      - false
                    threat_level:
                      - Info
                      - Low
                      - Medium
                      - High
                      - Critical
        '401':
          description: Unauthorized
      operationId: get_incident_filters
      description: Fetch the fields and values used to filter incidents
      security:
        - X-AIMS-Auth-Token: []
      x-code-samples:
        - lang: Request Sample
          source: |
            curl -H "x-aims-auth-token: ${TOKEN}" -X GET https://api.cloudinsight.alertlogic.com/iris/v3/incident_filters
      parameters: []
components:
  schemas:
    IncidentId:
      type: string
      description: IRIS incident ID can either be a length 16 alpha-numeric string e.g. e11111ee11111111 or a UUID e.g. XXXX0000-0000-0000-0000-0XXX00000000
    Incident:
      title: Incident
      type: object
      description: IRIS incident
      x-examples:
        Incident Example: null
      properties:
        accountId:
          type: string
          description: AIMS Account Id
        all_assets:
          type: array
          items:
            type: object
        assets:
          type: object
          properties:
            __asset:
              type: object
            __source:
              type: string
            al__deployment:
              type: string
        createTime:
          type: number
          description: Incident creation time
        createtime_str:
          type: string
          description: Incident creation time in ISO format
        customer:
          type: string
          description: Customer name
        customer_status:
          type: object
          properties:
            status:
              type: string
            status_change_time:
              type: string
        desc:
          type: string
        humanFriendlyId:
          type: string
        incident:
          type: object
          properties:
            description:
              type: string
            summary:
              type: string
            threatRating:
              type: string
        incidentId:
          type: string
          description: Incident ID
        incident_attack_class:
          type: string
        incident_class:
          type: string
        incident_type:
          type: string
        snooze_status:
          type: object
          properties:
            period_ms:
              type: number
            reason_code:
              type: string
            snoozed:
              type: boolean
        summary:
          type: string
        updateTime:
          type: number
        updatetime_str:
          type: string
      required:
        - accountId
        - incidentId
        - incident
        - humanFriendlyId
        - desc
        - customer_status
        - createTime
        - createtime_str
        - updateTime
        - updatetime_str
        - customer
    ErrorResponse:
      title: Error response
      type: object
      description: Error response object
      properties:
        error:
          type: string
          description: error message
        code:
          type: number
          description: http error code
    IncidentKey:
      title: IncidentKey
      type: object
      description: Incident key object
      properties:
        incidentId:
          type: string
        humanFriendlyId:
          type: string
        accountId:
          type: string
    FriendlyResponse:
      title: FriendlyResponse
      type: array
      items:
        $ref: '#/components/schemas/IncidentKey'
      description: FriendlyResponse list
      x-examples:
        FriendlyResponse Example: null
      required:
        - response
    AssociatedElaborations:
      title: AssociatedElaborations
      type: object
      description: AssociatedElaborations object
      x-examples:
        AssociatedElaborations Example: null
      properties:
        filter:
          type: object
        metadata:
          type: object
        returnVals:
          type: array
          items:
            type: object
            description: Values returned by the query
        stats:
          type: object
    IncidentList:
      title: Incident list
      type: array
      items:
        $ref: '#/components/schemas/Incident'
      description: Incident list
    PaginatedIncidentList:
      title: Paginated Incident list
      type: object
      properties:
        metadata:
          $ref: '#/components/schemas/PaginationMetadata'
        iris_items:
          $ref: '#/components/schemas/IncidentList'
      description: Paginated Incident list
    CustomerFeedback:
      title: CustomerFeedback
      type: object
      description: Customer feedback response object
      properties:
        feedback:
          type: string
        feedback_user:
          type: string
        feedback_uid:
          type: string
        feedback_reason:
          type: string
        feedback_datetime:
          type: string
      required:
        - feedback
        - feedback_datetime
        - feedback_reason
        - feedback_uid
        - feedback_user
    ReopenIncident:
      title: Incident completion responses
      type: object
      description: Incident completion response object
      properties:
        new:
          type: object
          properties:
            notes:
              type: string
            reason_code:
              type: string
            status:
              type: string
            status_change_time:
              type: string
          required:
            - notes
            - reason_code
            - status
            - status_change_time
        old:
          type: object
          properties:
            status:
              type: string
            status_change_time:
              type: string
            reason_code:
              type: string
            notes:
              type: string
          required:
            - notes
            - reason_code
            - status
            - status_change_time
      required:
        - new
        - old
    CompleteIncident:
      title: Incident completion responses
      type: object
      description: Incident completion response object
      properties:
        new:
          type: object
          properties:
            notes:
              type: string
            reason_code:
              type: string
            status:
              type: string
            status_change_time:
              type: string
          required:
            - notes
            - reason_code
            - status
            - status_change_time
        old:
          type: object
          properties:
            status:
              type: string
            status_change_time:
              type: string
          required:
            - status
            - status_change_time
      required:
        - new
        - old
    PaginationMetadata:
      title: PaginationMetadata
      type: object
      description: Metadata for the paginated API response
      properties:
        limit:
          type: integer
          minimum: 1
          description: Maximum number of items in the result set
        links:
          type: object
          required:
            - prev
            - next
            - self
          properties:
            first:
              type: string
              description: The link for the first page of results.
            prev:
              type: string
              description: The link for the immediate previous page of results.
            next:
              type: string
              description: The link for the immediate next page of results.
            self:
              type: string
              description: The link for the current page of results.
            last:
              type: string
              description: The link for the last page of results.
        offset:
          type: integer
          minimum: 0
          description: Offset of the first item in the result set
        total_count:
          type: integer
          minimum: 0
          description: Total number of items
      required:
        - limit
        - links
        - offset
        - total_count
  securitySchemes:
    X-AIMS-Auth-Token:
      name: X-AIMS-Auth-Token
      type: apiKey
      in: header
      description: AIMS Authentication Token
  parameters:
    PaginationParam:
      name: pagination
      in: query
      schema:
        type: boolean
      description: Enable pagination of the result set
    LimitParam:
      name: limit
      in: query
      schema:
        type: integer
        minimum: 1
      description: Maximum number of items in the result set
    OffsetParam:
      name: offset
      in: query
      schema:
        type: integer
        minimum: 0
      description: The (zero-based) offset of the first item in the result set
  examples:
    InvalidLimitParam:
      value:
        code: 400
        error: Invalid query parameter 'limit'
    InvalidOffsetParam:
      value:
        code: 400
        error: Invalid query parameter 'offset'
tags:
  - name: Incident operations
    description: IRIS incident operations
  - name: Partner API
    description: Multiple account operations
  - name: UI operations
    description: IRIS operations available through the console
  - name: Console
    description: IRIS helpers available for console
