openapi: 3.0.2
info:
  title: Alert Logic Universal Search Service
  version: '2.0'
  description: "Service for submitting searches and getting their results.\nThis API is datatype agnostic as the selection of which datatype to search over is now done in the SQL via the FROM part of the query. "
servers:
  - url: 'https://api.global-services.global.alertlogic.com'
    description: production
    x-alertlogic-session-endpoint: true
  - url: 'https://api.global-integration.product.dev.alertlogic.com'
    description: integration
    x-alertlogic-session-endpoint: true
paths:
  '/search/v2/{account_id}/searches':
    post:
      summary: Execute Search
      tags: []
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchCreated'
              examples:
                Create Search Response Example:
                  value:
                    search_uuid: 001737AE-B6BB-4DC4-9AE0-7CF363B6836E
                    progress: 0
                    search_status: pending
                    start_ts: 1527509673
                    status_details: pending
                    update_ts: 1527509673
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              examples:
                Bad SQL Response Example:
                  value:
                    error: "Unknow keyword 'SELECTA'"
      operationId: start_query_execution
      description: |-
        Request the execution of a new search.

        Use the text/plain media type with an SQL statement to execute http request.
        Details on how the SQL statements look will be given in a separate document.
        Old style search in JSON form can be passed as media type application/json.
      security:
        - X-AIMS-Auth-Token: []
      parameters:
        - schema:
            type: string
            enum:
              - auto
              - batch
              - report
            default: auto
          in: query
          name: search_type
        - schema:
            type: boolean
            default: 'false'
            enum:
              - 'true'
              - 'false'
          in: query
          name: dry_run
      requestBody:
        content:
          text/plain:
            schema:
              type: string
              description: The SQL statement to execute
            x-alertlogic-schema:
              name: query_string
        description: ''
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
  '/search/v2/{account_id}/searches/{query_execution_id}':
    get:
      summary: Get Search Results
      tags: []
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
      operationId: get_query_results
      security:
        - X-AIMS-Auth-Token: []
      parameters:
        - schema:
            type: boolean
            enum:
              - 'true'
              - 'false'
            default: 'false'
          in: query
          name: details
          description: Return search execution details
        - schema:
            type: integer
          in: query
          name: offest
          description: offset within a results page
        - schema:
            type: integer
            default: '100'
          in: query
          name: limit
          description: Limit the number of elements on the response
        - schema:
            type: string
          in: query
          name: next_token
          description: A next_token from a previous request to continue paging results
      description: 'Returns the results of a query execution specified by {search_uuid}'
    parameters:
      - schema:
          type: string
        name: account_id
        in: path
        required: true
        description: AIMS Account ID
      - schema:
          type: string
        name: query_execution_id
        in: path
        required: true
  '/search/v1/{account_id}/messages/{datatype}':
    post:
      summary: Read Messages
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessagesResponse'
      operationId: read_messages
      description: |-
        Read a set of messages from storage by ID
      security:
        - X-AIMS-Auth-Token: []
      parameters:
        - schema:
            type: string
          name: account_id
          in: path
          required: true
        - schema:
            type: string
            enum:
              - logmsgs
          name: datatype
          in: path
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MessagesParams'
        description: Read Messages Input Parameters
components:
  schemas:
    SearchCreated:
      title: SearchCreated
      type: object
      properties:
        search_uuid:
          type: string
          description: The unique id for the search request
    SearchFailed:
      title: SearchFailed
      type: object
      properties:
        search_status:
          type: string
          enum:
            - failed
        status_details:
          type: string
          description: 'User friendly status '
        details:
          $ref: '#/components/schemas/SearchDetails'
    SearchDetails:
      title: SearchDetails
      type: object
      properties:
        query:
          type: string
          description: Search requested query after applying of defaults
        search_type:
          type: string
          enum:
            - batch
            - interactive
            - report
        start_ts:
          type: integer
          description: Start time of the search in Epoch
        update_ts:
          type: integer
          description: Last update to the search in Epoch
        stats:
          $ref: '#/components/schemas/SearchStats'
    SearchStats:
      title: SearchStats
      type: object
      properties:
        fetchers_executed:
          type: integer
        filtered_batches:
          type: integer
        filtered_bytes:
          type: integer
        filtered_compressed_bytes:
          type: integer
        filtered_records:
          type: integer
        filters_executed:
          type: integer
        filters_scheduled:
          type: integer
        input_scanned_bytes:
          type: integer
        input_scanned_packets:
          type: integer
        input_scanned_records:
          type: integer
        output_records:
          type: integer
        recurse_sorts:
          type: integer
        sort_recurse_time:
          type: integer
        sorts_executed:
          type: integer
    MessagesParams:
      title: MessagesParams
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
          required: true
        fields:
          type: array
          items:
            type: string
        tokens_offsets:
          type: string
          enum:
            - 'true'
            - 'false'
          default: 'false'
        properties:
          type: string
          enum:
            - 'true'
            - 'false'
          default: 'false'
    MessagesResponse:
      title: Messages
      type: array
      items:
        type: object
        properties:
          id:
            type: object
            properties:
              msgid:
                type: string
              aid:
                type: integer
              account:
                type: integer
            required: true
          fields:
            type: object
            required: true
          error:
            type: object
  securitySchemes:
    X-AIMS-Auth-Token:
      name: X-AIMS-Auth-Token
      type: apiKey
      in: header
      description: AIMS Authentication Token

